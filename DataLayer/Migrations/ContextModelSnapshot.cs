// <auto-generated />
using DataLayer.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DataLayer.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.15")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CoreLayer.Models.AltKategori", b =>
                {
                    b.Property<int>("AltKategoriId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AltKategoriAdi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("KategoriId")
                        .HasColumnType("int");

                    b.HasKey("AltKategoriId");

                    b.HasIndex("KategoriId");

                    b.ToTable("AltKategori");
                });

            modelBuilder.Entity("CoreLayer.Models.Fatura", b =>
                {
                    b.Property<int>("FaturaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("FaturaTutari")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("UyeId")
                        .HasColumnType("int");

                    b.HasKey("FaturaId");

                    b.HasIndex("UyeId")
                        .IsUnique();

                    b.ToTable("Fatura");
                });

            modelBuilder.Entity("CoreLayer.Models.FaturaDetay", b =>
                {
                    b.Property<int>("FaturaDetayId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FaturaId")
                        .HasColumnType("int");

                    b.Property<int>("UrunId")
                        .HasColumnType("int");

                    b.HasKey("FaturaDetayId");

                    b.HasIndex("FaturaId");

                    b.HasIndex("UrunId");

                    b.ToTable("FaturaDetay");
                });

            modelBuilder.Entity("CoreLayer.Models.Kategori", b =>
                {
                    b.Property<int>("KategoriId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("KategoriAdi")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("KategoriId");

                    b.ToTable("Kategori");
                });

            modelBuilder.Entity("CoreLayer.Models.Sepet", b =>
                {
                    b.Property<int>("SepetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("UyeId")
                        .HasColumnType("int");

                    b.HasKey("SepetId");

                    b.HasIndex("UyeId")
                        .IsUnique();

                    b.ToTable("Sepet");
                });

            modelBuilder.Entity("CoreLayer.Models.SepetDetay", b =>
                {
                    b.Property<int>("SepetDetayId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SepetId")
                        .HasColumnType("int");

                    b.Property<int>("UrunId")
                        .HasColumnType("int");

                    b.HasKey("SepetDetayId");

                    b.HasIndex("SepetId");

                    b.HasIndex("UrunId");

                    b.ToTable("SepetDetay");
                });

            modelBuilder.Entity("CoreLayer.Models.Urun", b =>
                {
                    b.Property<int>("UrunId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AltKategoriId")
                        .HasColumnType("int");

                    b.Property<decimal>("Fiyat")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Resim")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UrunAdi")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UrunId");

                    b.HasIndex("AltKategoriId");

                    b.ToTable("Urunler");
                });

            modelBuilder.Entity("CoreLayer.Models.Uye", b =>
                {
                    b.Property<int>("UyeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Resim")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sifre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Soyadi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UyeAdi")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UyeId");

                    b.ToTable("Uyeler");
                });

            modelBuilder.Entity("CoreLayer.Models.AltKategori", b =>
                {
                    b.HasOne("CoreLayer.Models.Kategori", "kategori")
                        .WithMany("AltKategoriler")
                        .HasForeignKey("KategoriId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("kategori");
                });

            modelBuilder.Entity("CoreLayer.Models.Fatura", b =>
                {
                    b.HasOne("CoreLayer.Models.Uye", "uye")
                        .WithOne("fatura")
                        .HasForeignKey("CoreLayer.Models.Fatura", "UyeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("uye");
                });

            modelBuilder.Entity("CoreLayer.Models.FaturaDetay", b =>
                {
                    b.HasOne("CoreLayer.Models.Fatura", "fatura")
                        .WithMany("faturaDetay")
                        .HasForeignKey("FaturaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CoreLayer.Models.Urun", "urun")
                        .WithMany("faturaDetay")
                        .HasForeignKey("UrunId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("fatura");

                    b.Navigation("urun");
                });

            modelBuilder.Entity("CoreLayer.Models.Sepet", b =>
                {
                    b.HasOne("CoreLayer.Models.Uye", "uye")
                        .WithOne("sepet")
                        .HasForeignKey("CoreLayer.Models.Sepet", "UyeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("uye");
                });

            modelBuilder.Entity("CoreLayer.Models.SepetDetay", b =>
                {
                    b.HasOne("CoreLayer.Models.Sepet", "sepet")
                        .WithMany("sepetDetay")
                        .HasForeignKey("SepetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CoreLayer.Models.Urun", null)
                        .WithMany("sepetDetay")
                        .HasForeignKey("UrunId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("sepet");
                });

            modelBuilder.Entity("CoreLayer.Models.Urun", b =>
                {
                    b.HasOne("CoreLayer.Models.AltKategori", "altKategori")
                        .WithMany("Urunler")
                        .HasForeignKey("AltKategoriId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("altKategori");
                });

            modelBuilder.Entity("CoreLayer.Models.AltKategori", b =>
                {
                    b.Navigation("Urunler");
                });

            modelBuilder.Entity("CoreLayer.Models.Fatura", b =>
                {
                    b.Navigation("faturaDetay");
                });

            modelBuilder.Entity("CoreLayer.Models.Kategori", b =>
                {
                    b.Navigation("AltKategoriler");
                });

            modelBuilder.Entity("CoreLayer.Models.Sepet", b =>
                {
                    b.Navigation("sepetDetay");
                });

            modelBuilder.Entity("CoreLayer.Models.Urun", b =>
                {
                    b.Navigation("faturaDetay");

                    b.Navigation("sepetDetay");
                });

            modelBuilder.Entity("CoreLayer.Models.Uye", b =>
                {
                    b.Navigation("fatura");

                    b.Navigation("sepet");
                });
#pragma warning restore 612, 618
        }
    }
}
